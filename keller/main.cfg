/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var EUSCI_A0 = xdc.useModule('ti.mcu.msp430.csl2.communication.EUSCI_A0');
var EUSCI_A1 = xdc.useModule('ti.mcu.msp430.csl2.communication.EUSCI_A1');
CSL.configApiVersion = "1.20.00";

/* these modules should be part of every project */
var CS = xdc.useModule('ti.mcu.msp430.csl2.clock.CS');
var WDT_A = xdc.useModule('ti.mcu.msp430.csl2.watchdog.WDT_A');
var System = xdc.useModule('ti.mcu.msp430.csl2.system.System');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var InterruptVectors = xdc.useModule('ti.mcu.msp430.csl.interrupt_vectors.InterruptVectors');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;

/* Enable global interrupt */
System.srRegs.SR.GIE = System.srDefs.GIE;
EUSCI_A0.eusciMode = EUSCI_A0.eusciBaseDefs.UARTMode;
EUSCI_A0.eusciUART.eusciUARTPin[1] = 1;
GPIO.regs.P2SEL1.Bit0 = GPIO.defs.BIT0;
EUSCI_A1.eusciMode = EUSCI_A1.eusciBaseDefs.UARTMode;
EUSCI_A1.eusciUART.eusciUARTPin[0] = 1;
GPIO.regs.P2SEL1.Bit6 = GPIO.defs.BIT6;
EUSCI_A1.eusciUART.eusciUARTPin[1] = 1;
GPIO.regs.P2SEL1.Bit5 = GPIO.defs.BIT5;
EUSCI_A1.regs.interruptSource[1].interruptEnable = true;
EUSCI_A1.regs.interruptSource[1].interruptHandler = true;
EUSCI_A1.regs.interruptSource[0].interruptHandler = true;
CSL.device.vcc = 3.6;
